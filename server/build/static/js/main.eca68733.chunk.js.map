{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/index.js","assets/images/memories.png","constants/apiEndpoints.js","api/index.js","styles.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","App.js","index.js"],"names":["postActionTypes","commonActionType","reducer","posts","action","type","payload","map","post","_id","filter","postId","combineReducers","serverConstants","server","baseUrl","apis","base","addPost","likePost","url","getPostsList","reqUrl","axios","get","newPost","reqBody","title","creator","message","tags","selectedFile","updatePost","postData","likeCount","patch","deletePost","delete","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","heading","color","image","marginLeft","breakpoints","down","mainContainer","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","position","overlay","top","left","overlay2","right","grid","details","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","component","Typography","variant","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tag","CardContent","gutterBottom","CardActions","a","api","data","code","console","error","smMargin","spacing","actionDiv","textAlign","Posts","postsList","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","setPostData","find","useEffect","onClear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","App","Container","maxWidth","AppBar","align","src","memoriesImage","alt","Grow","in","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca68733.chunk.js","sourcesContent":["const postActionTypes = {\r\n    POST_LIST: 'FETCH_POSTS_LIST',\r\n    ADD_POST: 'ADD_POST',\r\n    UPDATE_POST: 'UPDATE_POST',\r\n    DELETE_POST: 'DELETE_POST',\r\n};\r\n\r\nconst commonActionType = {\r\n    ERROR: 'ERROR',\r\n};\r\n\r\nexport {\r\n    postActionTypes,\r\n    commonActionType\r\n};","import { postActionTypes } from \"../constants/actionTypes\";\r\n\r\nconst reducer = (posts = [], action) => {\r\n    switch (action.type) {\r\n        case postActionTypes.POST_LIST:\r\n            return action.payload ? action.payload : posts;\r\n        case postActionTypes.ADD_POST:\r\n            return [...posts, ...action.payload];\r\n        case postActionTypes.UPDATE_POST:\r\n            return posts.map(post => post._id === action.payload._id ? action.payload : post);\r\n        case postActionTypes.DELETE_POST:\r\n            return posts.filter(post => post._id !== action.postId);\r\n        default:\r\n            return posts;\r\n    }\r\n};\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({ posts })","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","/**\r\n * Constants for the server api Endpoints\r\n */\r\n\r\n const serverConstants = {\r\n    server: {\r\n        baseUrl: 'http://localhost:8090',\r\n        apis: {\r\n            post: {\r\n                base: '/posts',\r\n                addPost: '/add',\r\n                likePost: '/likePost',\r\n            }\r\n        }\r\n    }\r\n};\r\nexport default serverConstants;","import axios from 'axios';\r\nimport serverConstants from '../constants/apiEndpoints';\r\n\r\nconst url = serverConstants.server.baseUrl;\r\n\r\nexport const getPostsList = () => {\r\n    let reqUrl = `${url}${serverConstants.server.apis.post.base}`;\r\n    return axios.get(reqUrl);\r\n};\r\n\r\nexport const addPost = (newPost) => {\r\n    let reqUrl = `${url}${serverConstants.server.apis.post.base}${serverConstants.server.apis.post.addPost}`;\r\n    let reqBody = {\r\n        title: newPost.title,\r\n        creator: newPost.creator,\r\n        message: newPost.message,\r\n        tags: newPost.tags,\r\n        selectedFile: newPost.selectedFile\r\n    };\r\n    return axios.post(reqUrl, reqBody);\r\n}\r\n\r\nexport const updatePost = (postId, postData) => {\r\n    let reqUrl = `${url}${serverConstants.server.apis.post.base}/${postId}`;\r\n    let reqBody = {\r\n        title: postData.title,\r\n        creator: postData.creator,\r\n        message: postData.message,\r\n        tags: postData.tags,\r\n        likeCount: postData.likeCount,\r\n        selectedFile: postData.selectedFile\r\n    };\r\n    return axios.patch(reqUrl, reqBody);\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    let reqUrl = `${url}${serverConstants.server.apis.post.base}/${postId}`;\r\n    return axios.delete(reqUrl);\r\n}\r\n\r\nexport const likePost = (postId) => {\r\n    let reqUrl = `${url}${serverConstants.server.apis.post.base}/${postId}${serverConstants.server.apis.post.likePost}`;\r\n    return axios.patch(reqUrl);\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  [theme.breakpoints.down('sm')]: {\r\n    mainContainer: {\r\n      flexDirection: 'column-reverse'\r\n    }\r\n  }\r\n}));","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        backgroundBlendMode: 'darken',\r\n    },\r\n    border: {\r\n        border: 'solid',\r\n    },\r\n    fullHeightCard: {\r\n        height: '100%',\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        borderRadius: '15px',\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        left: '20px',\r\n        color: 'white',\r\n    },\r\n    overlay2: {\r\n        position: 'absolute',\r\n        top: '20px',\r\n        right: '20px',\r\n        color: 'white',\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        margin: '20px',\r\n    },\r\n    title: {\r\n        padding: '0 16px',\r\n    },\r\n    cardActions: {\r\n        padding: '0 16px 8px 16px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n}));","import useStyles from './styles';\r\nimport {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const likeThisPost = () => {\r\n        dispatch(likePost(post._id));\r\n    };\r\n    \r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia\r\n                className={classes.media}\r\n                component=\"image\"\r\n                image={post.selectedFile}\r\n                title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">\r\n                    {post.creator}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {moment(post.createdAt).fromNow()}\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: 'white'}} size=\"small\" onClick={() => setCurrentId(post._id)}>\r\n                    <MoreHorizIcon fontSize=\"small\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {post.tags.map((tag) => `#${tag} `)}\r\n                </Typography>\r\n            </div>\r\n            <CardContent>\r\n                <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n                    {post.title}\r\n                </Typography>\r\n                <Typography className={classes.title} variant=\"body2\" component=\"p\" color=\"textSecondary\">\r\n                    {post.message}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={likeThisPost}>\r\n                    <ThumbUpAlt fontSize=\"small\" />&nbsp;\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\" />&nbsp;\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\nexport default Post;","import * as api from '../api';\r\nimport { postActionTypes, commonActionType } from '../constants/actionTypes';\r\n\r\nexport const getPosts = () => async (dispatch) =>  {\r\n    try {\r\n        let { data } = await api.getPostsList();\r\n        if (data.code === '000') {\r\n            const action = {\r\n                type: postActionTypes.POST_LIST,\r\n                payload: data && data.data && data.data.length ? data.data : []\r\n            };\r\n            dispatch(action);\r\n        }\r\n        else {\r\n            const action = {\r\n                type: commonActionType.ERROR,\r\n                message: data && data.message\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error in getPosts action. ERROR: \", error);\r\n    }\r\n}\r\n\r\nexport const addPost = (newPost) => async (dispatch) =>  {\r\n    try {\r\n        let { data } = await api.addPost(newPost);\r\n        if (data.code === '000') {\r\n            const action = {\r\n                type: postActionTypes.ADD_POST,\r\n                payload: data && data.data && data.data.length ? data.data : []\r\n            };\r\n            dispatch(action);\r\n        }\r\n        else {\r\n            const action = {\r\n                type: commonActionType.ERROR,\r\n                message: data && data.message\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error in addPost action. ERROR: \", error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (postId, postData) => async (dispatch) =>  {\r\n    try {\r\n        let { data } = await api.updatePost(postId, postData);\r\n        if (data.code === '000') {\r\n            const action = {\r\n                type: postActionTypes.UPDATE_POST,\r\n                payload: data && data.data ? data.data : {}\r\n            };\r\n            dispatch(action);\r\n        }\r\n        else {\r\n            const action = {\r\n                type: commonActionType.ERROR,\r\n                message: data && data.message\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error in updatePost action. ERROR: \", error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => async (dispatch) =>  {\r\n    try {\r\n        let { data } = await api.deletePost(postId);\r\n        if (data.code === '000') {\r\n            const action = {\r\n                type: postActionTypes.DELETE_POST,\r\n                postId: postId\r\n            };\r\n            dispatch(action);\r\n        }\r\n        else {\r\n            const action = {\r\n                type: commonActionType.ERROR,\r\n                message: data && data.message\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error in deletePost action. ERROR: \", error);\r\n    }\r\n}\r\n\r\nexport const likePost = (postId) => async (dispatch) =>  {\r\n    try {\r\n        let { data } = await api.likePost(postId);\r\n        if (data.code === '000') {\r\n            const action = {\r\n                type: postActionTypes.UPDATE_POST,\r\n                payload: data && data.data ? data.data : {}\r\n            };\r\n            dispatch(action);\r\n        }\r\n        else {\r\n            const action = {\r\n                type: commonActionType.ERROR,\r\n                message: data && data.message\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n    catch (error) {\r\n        console.error(\"Error in likePost action. ERROR: \", error);\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    actionDiv: {\r\n        textAlign: 'center',\r\n    },\r\n}));","import { useSelector } from 'react-redux';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\n\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const postsList = useSelector(state => state.posts);\r\n    \r\n    return (\r\n        !postsList.length ? <CircularProgress /> : (\r\n            <Grid\r\n                className={classes.mainContainer}\r\n                container\r\n                alignItems=\"stretch\"\r\n                spacing={3}>\r\n                {\r\n                    postsList.map(post => (\r\n                        <Grid key={post._id} item xs={12} sm={6}>\r\n                            <Post post={post} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        )\r\n    );\r\n}\r\nexport default Posts;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    fileInput: {\r\n        width: '97%',\r\n        margin: '10px 0',\r\n    },\r\n    buttonSubmit: {\r\n        marginBottom: 10,\r\n    },\r\n}));","import { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport { Button, TextField, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: null\r\n    });\r\n    const post = useSelector(state => currentId ? state.posts.find(item => item._id === currentId) : null);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post]);\r\n    \r\n    const onClear = () => {\r\n        setCurrentId(null);\r\n        setPostData({\r\n            creator: '',\r\n            message: '',\r\n            tags: '',\r\n            title: '',\r\n            selectedFile: null\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        }\r\n        else {\r\n            dispatch(addPost(postData));\r\n        }\r\n        onClear();\r\n    }\r\n    \r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form\r\n                autoComplete=\"off\"\r\n                noValidate\r\n                className={`${classes.form} ${classes.root}`}\r\n                onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">\r\n                    { currentId ? 'Updating' : 'Creating'} a memory\r\n                </Typography>\r\n                <TextField\r\n                    name=\"creator\"\r\n                    variant=\"outlined\"\r\n                    label=\"Creator\"\r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={(e) => { setPostData({ ...postData, creator: e.target.value })}} />\r\n                <TextField\r\n                    name=\"title\"\r\n                    variant=\"outlined\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(e) => { setPostData({ ...postData, title: e.target.value })}} />\r\n                <TextField\r\n                    name=\"message\"\r\n                    variant=\"outlined\"\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(e) => { setPostData({ ...postData, message: e.target.value })}} />\r\n                <TextField\r\n                    name=\"tags\"\r\n                    variant=\"outlined\"\r\n                    label=\"Tags\"\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(e) => { setPostData({ ...postData, tags: e.target.value.split(',') })}} />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={(base64) => setPostData({ ...postData, selectedFile: base64.base64 })} />\r\n                </div>\r\n                <Button\r\n                    className={classes.buttonSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    fullWidth>\r\n                    { currentId ? 'Update' : 'Add'} Memory\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    onClick={onClear}>\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\nexport default Form;","import { useEffect, useState } from 'react';\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport memoriesImage from './assets/images/memories.png';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getPosts } from './actions/posts';\r\nimport useStyles from './styles';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [currentId, setCurrentId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">\r\n                    Memories\r\n                </Typography>\r\n                <img className={classes.image} src={memoriesImage} alt=\"memories\" height=\"60\" />\r\n            </AppBar>\r\n            <Grow in>\r\n                <Grid\r\n                    container\r\n                    className={classes.mainContainer}\r\n                    justifyContent=\"space-between\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                </Grid>\r\n            </Grow>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}